/**
 * @file map_test.ino
 * @author Gaspar Fabrega Ragni
 * @brief M5Cardputer GPS map test
 * @version 0.1
 * @date 2024-08-23
 *
 *
 * @Hardwares: M5Cardputer
 * @Platform Version: Arduino M5Stack Board Manager v2.3.2
 * @Dependent Library:
 * M5GFX: https://github.com/m5stack/M5GFX
 * M5Unified: https://github.com/m5stack/M5Unified
 *
 * https://forum.arduino.cc/t/multi-dimensional-arrays-with-different-number-of-elements/557252/2
 *
 */

#define len(x) (sizeof(x) / sizeof(x[0]))

#include "M5Cardputer.h"
#include <TinyGPSPlus.h>

static const uint32_t GPSBaud = 9600;
TinyGPSPlus gps; 
HardwareSerial GPS_Serial(2);

// long lat1[7] = { 334327468, 334327645, 334327683, 334328283, 334328866, 334332462, 334332717 };
// long lon1[7] = { 706158515, 706159347, 706159532, 706161482, 706163113, 706173029, 706173942 };

// long lat2[9] = { 334319409, 334318539, 334312620, 334312105, 334311582, 334306898, 334305516, 334304038, 334300893 };
// long lon2[9] = { 706116081, 706116451, 706118497, 706118689, 706118841, 706120779, 706121249, 706121698, 706122603 };

// long lat3[16] = { 334321175, 334320907, 334320464, 334316025, 334315926, 334315885, 334315913, 334316019, 334316344, 334316463, 334316506, 334316483, 334316406, 334316277, 334315749, 334315431 };
// long lon3[16] = { 706092520, 706091461, 706089710, 706071889, 706071328, 706070756, 706070093, 706069442, 706067732, 706067092, 706066438, 706065887, 706065344, 706064815, 706062807, 706061854 };

long lon_0[4] = { 706053417, 706054418, 706084123, 706085142 };
long lon_1[7] = { 706111303, 706111063, 706110768, 706110319, 706109729, 706090814, 706089629 };
long lon_2[16] = { 706092520, 706091461, 706089710, 706071889, 706071328, 706070756, 706070093, 706069442, 706067732, 706067092, 706066438, 706065887, 706065344, 706064815, 706062807, 706061854 };
long lon_3[21] = { 706118689, 706119872, 706137108, 706137796, 706138491, 706150941, 706151495, 706152029, 706152537, 706153039, 706153500, 706153911, 706154340, 706154682, 706154931, 706156415, 706156480, 706156513, 706156710, 706156987, 706157321 };
long lon_4[3] = { 706081176, 706098366, 706099678 };
long lon_5[16] = { 706163346, 706162479, 706140562, 706139900, 706139235, 706128471, 706127881, 706127290, 706126746, 706126291, 706125869, 706125049, 706124188, 706123639, 706123443, 706122603 };
long lon_6[20] = { 706160707, 706160546, 706160412, 706160320, 706160281, 706160298, 706160367, 706160481, 706160628, 706160792, 706160955, 706161102, 706161216, 706161285, 706161301, 706161263, 706161172, 706161039, 706160878, 706160707 };
long lon_7[20] = { 706159186, 706159270, 706159299, 706159269, 706159185, 706159055, 706158902, 706158738, 706158578, 706158439, 706158335, 706158277, 706158270, 706158315, 706158415, 706158556, 706158722, 706158896, 706159056, 706159186 };
long lon_8[5] = { 706166912, 706162551, 706162359, 706162008, 706161486 };
long lon_9[4] = { 706164504, 706165381, 706165621, 706171461 };
long lon_10[5] = { 706123315, 706123810, 706124003, 706127480, 706129198 };
long lon_11[12] = { 706137796, 706137900, 706137977, 706139746, 706139825, 706139900, 706140003, 706140095, 706140340, 706140621, 706140932, 706141384 };
long lon_12[9] = { 706155539, 706154610, 706142511, 706134175, 706133913, 706133411, 706132794, 706114119, 706113503 };
long lon_13[5] = { 706133411, 706133255, 706131304, 706131194, 706131094 };
long lon_14[7] = { 706155384, 706156164, 706158121, 706160806, 706166608, 706166961, 706167770 };
long lon_15[6] = { 706144808, 706136458, 706136126, 706135726, 706135176, 706133541 };
long lon_16[3] = { 706057962, 706051814, 706050868 };
long lon_17[5] = { 706087138, 706088709, 706108542, 706108929, 706109254 };
long lon_18[5] = { 706137796, 706137651, 706136123, 706136032, 706135811 };
long lon_19[7] = { 706158515, 706159347, 706159532, 706161482, 706163113, 706173029, 706173942 };
long lon_20[9] = { 706116081, 706116451, 706118497, 706118689, 706118841, 706120779, 706121249, 706121698, 706122603 };
long lon_21[5] = { 706110863, 706111303, 706113503, 706115794, 706116081 };
long lon_22[5] = { 706166340, 706166496, 706168316, 706168664, 706169626 };
long lon_23[3] = { 706105280, 706092616, 706091283 };
long lon_24[6] = { 706094531, 706095879, 706100636, 706103836, 706115274, 706116081 };
long lon_25[3] = { 706094531, 706094899, 706097156 };
long lon_26[3] = { 706169055, 706168639, 706167718 };
long lon_27[10] = { 706152612, 706151835, 706135463, 706134791, 706131739, 706131094, 706130377, 706127686, 706127009, 706113826 };
long lon_28[16] = { 706150768, 706143770, 706143222, 706142814, 706142467, 706141956, 706141494, 706140736, 706140032, 706139361, 706139236, 706139089, 706138949, 706138934, 706138913, 706139037 };
long lon_29[3] = { 706057114, 706058126, 706066745 };
long lon_30[4] = { 706153582, 706152670, 706150768, 706164002 };
long lon_31[5] = { 706113826, 706112634, 706112086, 706111801, 706110863 };
long lon_32[3] = { 706087138, 706089444, 706089629 };
long lon_33[5] = { 706091283, 706091821, 706092085, 706092520, 706092964 };
long lon_34[10] = { 706152670, 706150081, 706149712, 706149316, 706148914, 706148525, 706148391, 706148364, 706148767, 706149790 };
long lon_35[4] = { 706067842, 706068797, 706095955, 706097156 };
long lon_36[11] = { 706122603, 706122144, 706121018, 706102603, 706101416, 706100329, 706099962, 706099523, 706098998, 706073318, 706072312 };
long lon_37[17] = { 706173051, 706172855, 706172734, 706172707, 706172776, 706172932, 706173152, 706173401, 706173641, 706173837, 706173958, 706173986, 706173916, 706173760, 706173541, 706173292, 706173051 };
long lon_38[3] = { 706151990, 706153523, 706154389 };
long lon_39[8] = { 706139640, 706139418, 706138569, 706138541, 706138556, 706138595, 706138656, 706139562 };
long lon_40[5] = { 706097156, 706099678, 706101416, 706104058, 706104293 };
long lon_41[3] = { 706097156, 706098357, 706118689 };
long lon_42[3] = { 706089629, 706089852, 706091283 };
long lon_43[4] = { 706113826, 706112801, 706112276, 706111303 };
long lon_44[4] = { 706100636, 706101480, 706101874, 706102289 };
long lon_45[4] = { 706158315, 706155681, 706155510, 706154616 };
long lon_46[5] = { 706160298, 706157599, 706157472, 706157001, 706156430 };
long lon_47[5] = { 706089629, 706088526, 706072898, 706059726, 706058632 };
long lon_48[10] = { 706155384, 706154673, 706149410, 706146954, 706146413, 706145845, 706145344, 706144856, 706139256, 706138672 };
long lon_49[2] = { 706141494, 706141384 };
long lon_50[9] = { 706139037, 706141945, 706142103, 706142261, 706142476, 706142670, 706142831, 706143133, 706144473 };
long lon_51[4] = { 706144808, 706145323, 706146053, 706146432 };
long lon_52[2] = { 706154673, 706153582 };
long lon_53[5] = { 706138934, 706138697, 706138214, 706134371, 706133588 };
long lon_54[2] = { 706164002, 706164893 };
long lon_55[3] = { 706092964, 706094341, 706094531 };
long lon_56[4] = { 706103362, 706103690, 706103736, 706103836 };
long lon_57[2] = { 706102289, 706103362 };
long lon_58[4] = { 706135811, 706135534, 706133572, 706133411 };
long lon_59[5] = { 706135811, 706139640, 706157321, 706157629, 706158515 };
long lon_60[3] = { 706116081, 706117211, 706135811 };
long lon_61[2] = { 706169626, 706170347 };
long lon_62[2] = { 706166608, 706166340 };
long lon_63[4] = { 706173788, 706173058, 706172760, 706172139 };
long lon_64[2] = { 706173969, 706173788 };
long lon_65[13] = { 706133541, 706131098, 706130859, 706130548, 706130170, 706129733, 706129246, 706128717, 706128227, 706127720, 706127205, 706125484, 706124803 };
long lon_66[2] = { 706072898, 706071621 };
long lon_67[8] = { 706158121, 706158417, 706158377, 706158263, 706156942, 706156761, 706156620, 706156164 };
long lon_68[5] = { 706162669, 706160587, 706160520, 706160510, 706160806 };
long lon_69[2] = { 706097657, 706097973 };
long lon_70[4] = { 706167972, 706162773, 706161826, 706159185 };

long lat_0[4] = { 334337727, 334337992, 334345788, 334346066 };
long lat_1[7] = { 334336058, 334335857, 334335689, 334335516, 334335354, 334331568, 334331310 };
long lat_2[16] = { 334321175, 334320907, 334320464, 334316025, 334315926, 334315885, 334315913, 334316019, 334316344, 334316463, 334316506, 334316483, 334316406, 334316277, 334315749, 334315431 };
long lat_3[21] = { 334312105, 334312363, 334315707, 334315834, 334315963, 334318470, 334318617, 334318810, 334319047, 334319343, 334319684, 334320065, 334320577, 334321133, 334321722, 334325575, 334325739, 334325819, 334326290, 334326770, 334327225 };
long lat_4[3] = { 334294925, 334299611, 334299956 };
long lat_5[16] = { 334312837, 334312670, 334308447, 334308320, 334308191, 334306117, 334306000, 334305823, 334305606, 334305345, 334305016, 334304343, 334303394, 334302712, 334302394, 334300893 };
long lat_6[20] = { 334335230, 334335183, 334335095, 334334976, 334334837, 334334696, 334334570, 334334469, 334334404, 334334382, 334334405, 334334470, 334334571, 334334697, 334334835, 334334973, 334335093, 334335182, 334335229, 334335230 };
long lat_7[20] = { 334339810, 334339937, 334340080, 334340222, 334340349, 334340445, 334340498, 334340508, 334340474, 334340401, 334340294, 334340165, 334340028, 334339895, 334339776, 334339692, 334339651, 334339659, 334339714, 334339810 };
long lat_8[5] = { 334319876, 334318725, 334318675, 334318582, 334318444 };
long lat_9[4] = { 334309429, 334309615, 334309676, 334311085 };
long lat_10[5] = { 334298478, 334298586, 334298627, 334299395, 334299087 };
long lat_11[12] = { 334315834, 334315460, 334315182, 334308866, 334308586, 334308320, 334307975, 334307678, 334306864, 334306058, 334305279, 334304112 };
long lat_12[9] = { 334336390, 334336202, 334333665, 334332097, 334332047, 334331937, 334331826, 334328235, 334328118 };
long lat_13[5] = { 334331937, 334332531, 334339969, 334340390, 334340769 };
long lat_14[7] = { 334296502, 334296679, 334297125, 334297736, 334299056, 334299121, 334299317 };
long lat_15[6] = { 334288311, 334283902, 334283802, 334283791, 334283870, 334284081 };
long lat_16[3] = { 334290227, 334288890, 334288685 };
long lat_17[5] = { 334339295, 334339530, 334342498, 334342556, 334342604 };
long lat_18[5] = { 334315834, 334316333, 334322164, 334322512, 334323160 };
long lat_19[7] = { 334327468, 334327645, 334327683, 334328283, 334328866, 334332462, 334332717 };
long lat_20[9] = { 334319409, 334318539, 334312620, 334312105, 334311582, 334306898, 334305516, 334304038, 334300893 };
long lat_21[5] = { 334337718, 334336058, 334328118, 334320130, 334319409 };
long lat_22[5] = { 334298515, 334297968, 334292116, 334291871, 334291987 };
long lat_23[3] = { 334328015, 334325537, 334325276 };
long lat_24[6] = { 334314512, 334314841, 334315965, 334316675, 334319223, 334319409 };
long lat_25[3] = { 334314512, 334313499, 334306864 };
long lat_26[3] = { 334345308, 334345194, 334344942 };
long lat_27[10] = { 334344946, 334344795, 334341617, 334341487, 334340894, 334340769, 334340630, 334340108, 334339976, 334337417 };
long lat_28[16] = { 334305089, 334303757, 334303675, 334303681, 334303773, 334303862, 334303850, 334303501, 334302983, 334302242, 334302104, 334301778, 334301466, 334301306, 334301091, 334300582 };
long lat_29[3] = { 334327785, 334328075, 334330194 };
long lat_30[4] = { 334299106, 334300915, 334305089, 334308023 };
long lat_31[5] = { 334337417, 334337338, 334337346, 334337416, 334337718 };
long lat_32[3] = { 334339295, 334331897, 334331310 };
long lat_33[5] = { 334325276, 334323491, 334322636, 334321175, 334319709 };
long lat_34[10] = { 334300915, 334299980, 334299907, 334299902, 334300019, 334300383, 334300719, 334301099, 334302085, 334303582 };
long lat_35[4] = { 334299445, 334299665, 334306558, 334306864 };
long lat_36[11] = { 334300893, 334300582, 334300260, 334295511, 334295193, 334294800, 334294660, 334294476, 334294317, 334288014, 334287800 };
long lat_37[17] = { 334322862, 334322732, 334322549, 334322341, 334322140, 334321977, 334321876, 334321853, 334321911, 334322041, 334322224, 334322432, 334322633, 334322796, 334322897, 334322920, 334322862 };
long lat_38[3] = { 334339127, 334339499, 334339705 };
long lat_39[8] = { 334323884, 334324702, 334327844, 334327946, 334328051, 334328124, 334328185, 334328364 };
long lat_40[5] = { 334306864, 334299956, 334295193, 334288288, 334287685 };
long lat_41[3] = { 334306864, 334307161, 334312105 };
long lat_42[3] = { 334331310, 334330461, 334325276 };
long lat_43[4] = { 334337417, 334337016, 334336712, 334336058 };
long lat_44[4] = { 334315965, 334315190, 334314837, 334314932 };
long lat_45[4] = { 334339895, 334339284, 334339245, 334339037 };
long lat_46[5] = { 334334696, 334334036, 334334005, 334333890, 334333750 };
long lat_47[5] = { 334331310, 334331039, 334327194, 334323953, 334323709 };
long lat_48[10] = { 334296502, 334296171, 334293509, 334292232, 334292016, 334291912, 334291909, 334291985, 334293252, 334293504 };
long lat_49[2] = { 334303850, 334304112 };
long lat_50[9] = { 334300582, 334295985, 334295735, 334295582, 334295520, 334295576, 334295705, 334295901, 334296567 };
long lat_51[4] = { 334288311, 334288376, 334288439, 334288430 };
long lat_52[2] = { 334296171, 334299106 };
long lat_53[5] = { 334301306, 334301161, 334301049, 334300610, 334300590 };
long lat_54[2] = { 334308023, 334308199 };
long lat_55[3] = { 334319709, 334315167, 334314512 };
long lat_56[4] = { 334315177, 334315252, 334315697, 334316675 };
long lat_57[2] = { 334314932, 334315177 };
long lat_58[4] = { 334323160, 334323969, 334331335, 334331937 };
long lat_59[5] = { 334323160, 334323884, 334327225, 334327288, 334327468 };
long lat_60[3] = { 334319409, 334319624, 334323160 };
long lat_61[2] = { 334291987, 334292074 };
long lat_62[2] = { 334299056, 334298515 };
long lat_63[4] = { 334287405, 334287119, 334287002, 334286758 };
long lat_64[2] = { 334287477, 334287405 };
long lat_65[13] = { 334284081, 334288480, 334288929, 334289345, 334289721, 334290050, 334290325, 334290540, 334290677, 334290763, 334290796, 334291003, 334291074 };
long lat_66[2] = { 334327194, 334330608 };
long lat_67[8] = { 334297125, 334295638, 334295515, 334295437, 334295174, 334295224, 334295342, 334296679 };
long lat_68[5] = { 334299528, 334298862, 334298764, 334298649, 334297736 };
long lat_69[2] = { 334322561, 334322623 };
long lat_70[4] = { 334342431, 334340682, 334341030, 334340349 };

struct COORDS {
  long *street;
  uint16_t length;
};

// COORDS lon[] = {
//   { lon1, len(lon1) },
//   { lon2, len(lon2) },
//   { lon3, len(lon3) }
// };

// COORDS lat[] = {
//   { lat1, len(lat1) },
//   { lat2, len(lat2) },
//   { lat3, len(lat3) }
// };
COORDS lon[] = {
  { lon_0, 4 },
  { lon_1, 7 },
  { lon_2, 16 },
  { lon_3, 21 },
  { lon_4, 3 },
  { lon_5, 16 },
  { lon_6, 20 },
  { lon_7, 20 },
  { lon_8, 5 },
  { lon_9, 4 },
  { lon_10, 5 },
  { lon_11, 12 },
  { lon_12, 9 },
  { lon_13, 5 },
  { lon_14, 7 },
  { lon_15, 6 },
  { lon_16, 3 },
  { lon_17, 5 },
  { lon_18, 5 },
  { lon_19, 7 },
  { lon_20, 9 },
  { lon_21, 5 },
  { lon_22, 5 },
  { lon_23, 3 },
  { lon_24, 6 },
  { lon_25, 3 },
  { lon_26, 3 },
  { lon_27, 10 },
  { lon_28, 16 },
  { lon_29, 3 },
  { lon_30, 4 },
  { lon_31, 5 },
  { lon_32, 3 },
  { lon_33, 5 },
  { lon_34, 10 },
  { lon_35, 4 },
  { lon_36, 11 },
  { lon_37, 17 },
  { lon_38, 3 },
  { lon_39, 8 },
  { lon_40, 5 },
  { lon_41, 3 },
  { lon_42, 3 },
  { lon_43, 4 },
  { lon_44, 4 },
  { lon_45, 4 },
  { lon_46, 5 },
  { lon_47, 5 },
  { lon_48, 10 },
  { lon_49, 2 },
  { lon_50, 9 },
  { lon_51, 4 },
  { lon_52, 2 },
  { lon_53, 5 },
  { lon_54, 2 },
  { lon_55, 3 },
  { lon_56, 4 },
  { lon_57, 2 },
  { lon_58, 4 },
  { lon_59, 5 },
  { lon_60, 3 },
  { lon_61, 2 },
  { lon_62, 2 },
  { lon_63, 4 },
  { lon_64, 2 },
  { lon_65, 13 },
  { lon_66, 2 },
  { lon_67, 8 },
  { lon_68, 5 },
  { lon_69, 2 },
  { lon_70, 4 }
};

COORDS lat[] = {
  { lat_0, 4 },
  { lat_1, 7 },
  { lat_2, 16 },
  { lat_3, 21 },
  { lat_4, 3 },
  { lat_5, 16 },
  { lat_6, 20 },
  { lat_7, 20 },
  { lat_8, 5 },
  { lat_9, 4 },
  { lat_10, 5 },
  { lat_11, 12 },
  { lat_12, 9 },
  { lat_13, 5 },
  { lat_14, 7 },
  { lat_15, 6 },
  { lat_16, 3 },
  { lat_17, 5 },
  { lat_18, 5 },
  { lat_19, 7 },
  { lat_20, 9 },
  { lat_21, 5 },
  { lat_22, 5 },
  { lat_23, 3 },
  { lat_24, 6 },
  { lat_25, 3 },
  { lat_26, 3 },
  { lat_27, 10 },
  { lat_28, 16 },
  { lat_29, 3 },
  { lat_30, 4 },
  { lat_31, 5 },
  { lat_32, 3 },
  { lat_33, 5 },
  { lat_34, 10 },
  { lat_35, 4 },
  { lat_36, 11 },
  { lat_37, 17 },
  { lat_38, 3 },
  { lat_39, 8 },
  { lat_40, 5 },
  { lat_41, 3 },
  { lat_42, 3 },
  { lat_43, 4 },
  { lat_44, 4 },
  { lat_45, 4 },
  { lat_46, 5 },
  { lat_47, 5 },
  { lat_48, 10 },
  { lat_49, 2 },
  { lat_50, 9 },
  { lat_51, 4 },
  { lat_52, 2 },
  { lat_53, 5 },
  { lat_54, 2 },
  { lat_55, 3 },
  { lat_56, 4 },
  { lat_57, 2 },
  { lat_58, 4 },
  { lat_59, 5 },
  { lat_60, 3 },
  { lat_61, 2 },
  { lat_62, 2 },
  { lat_63, 4 },
  { lat_64, 2 },
  { lat_65, 13 },
  { lat_66, 2 },
  { lat_67, 8 },
  { lat_68, 5 },
  { lat_69, 2 },
  { lat_70, 4 }
};

long lat_min = 334281317;
long lat_max = 334346180;
long lon_min = 706050026;
long lon_max = 706175772;

void setup() {
  auto cfg = M5.config();
  // Serial.begin(9600);
  M5Cardputer.begin(cfg);
  int textsize = M5Cardputer.Display.height() / 60;
  if (textsize == 0) {
    textsize = 1;
  }
  M5Cardputer.Display.setTextSize(textsize);
  \\ Comenzar comunicacion serial con el gps
  GPS_Serial.begin(9600, SERIAL_8N1, 1, -1);
}

void loop() {
  for (uint16_t rowCnt = 0; rowCnt < len(lon); rowCnt++) {
    for (uint16_t colCnt = 0; colCnt < lon[rowCnt].length - 1; colCnt++) {
      int x0 = int(map(lon[rowCnt].street[colCnt], lon_min, lon_max,M5Cardputer.Display.width(),0));
      int x1 = int(map(lon[rowCnt].street[colCnt + 1], lon_min, lon_max,M5Cardputer.Display.width(),0));
      int y0 = int(map(lat[rowCnt].street[colCnt], lat_min, lat_max, 0, M5Cardputer.Display.height()));
      int y1 = int(map(lat[rowCnt].street[colCnt + 1], lat_min, lat_max, 0, M5Cardputer.Display.height()));
      M5Cardputer.Display.drawLine(x0, y0, x1, y1, 0x8c00ffU);
      delay(5);
    }
  }

  while (true){
    delay_gps(1000);
    int x0 = int(map_double(gps.location.lng(), lon_min, lon_max, M5Cardputer.Display.width(), 0));
    int y0 = int(map_double(gps.location.lat(), lon_min, lon_max, 0, M5Cardputer.Display.height()));
    M5Cardputer.Display.drawCircle
  }
  

  // for (int i = 0; i < 6; i++) {
  //   int x0 = int(map(lon[i]    , lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int x1 = int(map(lon[i + 1], lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int y0 = int(map(lat[i]    , lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   int y1 = int(map(lat[i + 1], lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   M5Cardputer.Display.drawLine(x0, y0, x1, y1, rand());
  //   delay(100);
  // }
  // for (int i = 0; i < 8; i++) {
  //   int x0 = int(map(lon2[i]    , lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int x1 = int(map(lon2[i + 1], lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int y0 = int(map(lat2[i]    , lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   int y1 = int(map(lat2[i + 1], lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   M5Cardputer.Display.drawLine(x0, y0, x1, y1, rand());
  //   delay(100);
  // }
  //   for (int i = 0; i < 15; i++) {
  //   int x0 = int(map(lon3[i]    , lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int x1 = int(map(lon3[i + 1], lon_min, lon_max, 0, M5Cardputer.Display.width()));
  //   int y0 = int(map(lat3[i]    , lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   int y1 = int(map(lat3[i + 1], lat_min, lat_max, 0, M5Cardputer.Display.height()));
  //   M5Cardputer.Display.drawLine(x0, y0, x1, y1, rand());
  //   delay(100);
  // }
}

// map for double precision floats
int map_double(double x, double in_min, double in_max, double out_min, double out_max) {
  return int((x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min);
}

// This custom version of delay() ensures that GPS objects work properly.
static void delay_gps(unsigned long ms) {
  unsigned long start = millis();
  do {
    while (ss.available()) gps.encode(ss.read());
  } while (millis() - start < ms);
}